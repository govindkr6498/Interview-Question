1. Salesforce Flow.
==> Salesforce flow is an automation tool that allow 
	users to easily create and optimize bussiness porcesses 
	without any coding skills.
	
	Type of flow.
	==> Screen Flow.
	==> Auto-launched Flow
	==> Record trigger Flow
	==> Schedule-Trigger Flow
	==> Plateform Event-Trigger Flows
	

2. Can flow call Apex classes.
==> Yes,Flow can call apex classes using the the "Apex" action 
	element,allowing for the execution of complex logic that may not 
	possible directly wthin the flow.
	
==> The invocableMethod annotation expose invocable actions inthe flow builder.
==> The invocable methd must be static,public or global.
==> Only one method in a class can have th3 invocableMethod annotation.

public class AccountAction {
	@invocableMethod(label ="Get Account Names"desciption= "Return the list of account" category ="Account")
	public static List<Accout> getAccount(List<Id> accountIds){}
}

3. Can we call Flow from LWC?
==>
	<Template>
		<Lightning-flow flow-api-name="Survey_Customers"></Lightning-flow>
	<Template>
	
	
4. Can we use LWC inside a Salesforce Flow?
==>
	<targets>
		<target>Lightning_FlowScreen</target>
	<targets>
	
	

1. Can we write a single flow for insert,update and delete case?
==> Yes, a Single Flow Can Handle All Three (Insert, Update, and Delete) Operations Directly.

2. What kind of flow we have?
==> There are six flow.
1. Screen Flow.
2. Schedule Flow
3. Record Trigger Flow
4. Autolaunched Flow
5. Platform Event Flow



3. What is difference between Flow and process builder?
==> Can be triggered by record changes, schedules, platform events, or manually
==> Supports screens for user input
==> Loops & Collections	Supports loops and bulk processing
==> Can send HTTP callouts to external systems
==> Can update multiple records efficiently	Updates  
==> Provides debug mode, detailed logs, and fault paths


==> Can be triggered only by record changes or platform events
==> No UI, only background automation
==> No support for loops
==> Cannot make HTTP callouts
==> one record at a time
==> Limited error handling options



4. Can we call future in flow?
==> No, Because when you want to call a anything from call then we shoud use @InvocableMethod.
   In future method we can't used @InvocableMethod because already used @Future method.
   
  
5. Why we used List of Id in InvocableMethod?
==> Because we should always used bulkify data.




	
